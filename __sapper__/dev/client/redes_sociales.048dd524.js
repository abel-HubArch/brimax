import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, D as svg_element, b as space, h as claim_element, j as children, c as detach_dev, f as claim_space, E as set_style, y as attr_dev, k as add_location, F as xlink_attr, l as insert_dev, z as append_dev, m as listen_dev, G as noop, H as run_all } from './client.e5af6fb8.js';

/* src/components/redes_sociales.svelte generated by Svelte v3.37.0 */
const file = "src/components/redes_sociales.svelte";

function create_fragment(ctx) {
	let div;
	let svg0;
	let circle0;
	let path0;
	let path1;
	let path2;
	let g0;
	let g1;
	let g2;
	let g3;
	let g4;
	let g5;
	let g6;
	let g7;
	let g8;
	let g9;
	let g10;
	let g11;
	let g12;
	let g13;
	let g14;
	let t0;
	let svg1;
	let radialGradient;
	let stop0;
	let stop1;
	let stop2;
	let stop3;
	let stop4;
	let stop5;
	let stop6;
	let stop7;
	let linearGradient0;
	let stop8;
	let stop9;
	let stop10;
	let stop11;
	let linearGradient1;
	let stop12;
	let stop13;
	let stop14;
	let stop15;
	let stop16;
	let linearGradient2;
	let stop17;
	let stop18;
	let linearGradient3;
	let linearGradient4;
	let linearGradient5;
	let linearGradient6;
	let linearGradient7;
	let stop19;
	let stop20;
	let stop21;
	let stop22;
	let stop23;
	let stop24;
	let stop25;
	let stop26;
	let stop27;
	let stop28;
	let stop29;
	let path3;
	let path4;
	let path5;
	let path6;
	let path7;
	let path8;
	let path9;
	let path10;
	let g15;
	let path11;
	let path12;
	let path13;
	let t1;
	let svg2;
	let g17;
	let g16;
	let path14;
	let path15;
	let path16;
	let path17;
	let path18;
	let path19;
	let path20;
	let t2;
	let svg3;
	let g18;
	let circle1;
	let path21;
	let g19;
	let g20;
	let g21;
	let g22;
	let g23;
	let g24;
	let g25;
	let g26;
	let g27;
	let g28;
	let g29;
	let g30;
	let g31;
	let g32;
	let g33;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			svg0 = svg_element("svg");
			circle0 = svg_element("circle");
			path0 = svg_element("path");
			path1 = svg_element("path");
			path2 = svg_element("path");
			g0 = svg_element("g");
			g1 = svg_element("g");
			g2 = svg_element("g");
			g3 = svg_element("g");
			g4 = svg_element("g");
			g5 = svg_element("g");
			g6 = svg_element("g");
			g7 = svg_element("g");
			g8 = svg_element("g");
			g9 = svg_element("g");
			g10 = svg_element("g");
			g11 = svg_element("g");
			g12 = svg_element("g");
			g13 = svg_element("g");
			g14 = svg_element("g");
			t0 = space();
			svg1 = svg_element("svg");
			radialGradient = svg_element("radialGradient");
			stop0 = svg_element("stop");
			stop1 = svg_element("stop");
			stop2 = svg_element("stop");
			stop3 = svg_element("stop");
			stop4 = svg_element("stop");
			stop5 = svg_element("stop");
			stop6 = svg_element("stop");
			stop7 = svg_element("stop");
			linearGradient0 = svg_element("linearGradient");
			stop8 = svg_element("stop");
			stop9 = svg_element("stop");
			stop10 = svg_element("stop");
			stop11 = svg_element("stop");
			linearGradient1 = svg_element("linearGradient");
			stop12 = svg_element("stop");
			stop13 = svg_element("stop");
			stop14 = svg_element("stop");
			stop15 = svg_element("stop");
			stop16 = svg_element("stop");
			linearGradient2 = svg_element("linearGradient");
			stop17 = svg_element("stop");
			stop18 = svg_element("stop");
			linearGradient3 = svg_element("linearGradient");
			linearGradient4 = svg_element("linearGradient");
			linearGradient5 = svg_element("linearGradient");
			linearGradient6 = svg_element("linearGradient");
			linearGradient7 = svg_element("linearGradient");
			stop19 = svg_element("stop");
			stop20 = svg_element("stop");
			stop21 = svg_element("stop");
			stop22 = svg_element("stop");
			stop23 = svg_element("stop");
			stop24 = svg_element("stop");
			stop25 = svg_element("stop");
			stop26 = svg_element("stop");
			stop27 = svg_element("stop");
			stop28 = svg_element("stop");
			stop29 = svg_element("stop");
			path3 = svg_element("path");
			path4 = svg_element("path");
			path5 = svg_element("path");
			path6 = svg_element("path");
			path7 = svg_element("path");
			path8 = svg_element("path");
			path9 = svg_element("path");
			path10 = svg_element("path");
			g15 = svg_element("g");
			path11 = svg_element("path");
			path12 = svg_element("path");
			path13 = svg_element("path");
			t1 = space();
			svg2 = svg_element("svg");
			g17 = svg_element("g");
			g16 = svg_element("g");
			path14 = svg_element("path");
			path15 = svg_element("path");
			path16 = svg_element("path");
			path17 = svg_element("path");
			path18 = svg_element("path");
			path19 = svg_element("path");
			path20 = svg_element("path");
			t2 = space();
			svg3 = svg_element("svg");
			g18 = svg_element("g");
			circle1 = svg_element("circle");
			path21 = svg_element("path");
			g19 = svg_element("g");
			g20 = svg_element("g");
			g21 = svg_element("g");
			g22 = svg_element("g");
			g23 = svg_element("g");
			g24 = svg_element("g");
			g25 = svg_element("g");
			g26 = svg_element("g");
			g27 = svg_element("g");
			g28 = svg_element("g");
			g29 = svg_element("g");
			g30 = svg_element("g");
			g31 = svg_element("g");
			g32 = svg_element("g");
			g33 = svg_element("g");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			svg0 = claim_element(
				div_nodes,
				"svg",
				{
					"xmlns:xlink": true,
					version: true,
					id: true,
					xmlns: true,
					class: true,
					x: true,
					y: true,
					viewBox: true,
					style: true,
					"xml:space": true
				},
				1
			);

			var svg0_nodes = children(svg0);
			circle0 = claim_element(svg0_nodes, "circle", { style: true, cx: true, cy: true, r: true }, 1);
			children(circle0).forEach(detach_dev);
			path0 = claim_element(svg0_nodes, "path", { style: true, d: true }, 1);
			children(path0).forEach(detach_dev);
			path1 = claim_element(svg0_nodes, "path", { style: true, d: true }, 1);
			children(path1).forEach(detach_dev);
			path2 = claim_element(svg0_nodes, "path", { style: true, d: true }, 1);
			children(path2).forEach(detach_dev);
			g0 = claim_element(svg0_nodes, "g", {}, 1);
			var g0_nodes = children(g0);
			g0_nodes.forEach(detach_dev);
			g1 = claim_element(svg0_nodes, "g", {}, 1);
			var g1_nodes = children(g1);
			g1_nodes.forEach(detach_dev);
			g2 = claim_element(svg0_nodes, "g", {}, 1);
			var g2_nodes = children(g2);
			g2_nodes.forEach(detach_dev);
			g3 = claim_element(svg0_nodes, "g", {}, 1);
			children(g3).forEach(detach_dev);
			g4 = claim_element(svg0_nodes, "g", {}, 1);
			children(g4).forEach(detach_dev);
			g5 = claim_element(svg0_nodes, "g", {}, 1);
			children(g5).forEach(detach_dev);
			g6 = claim_element(svg0_nodes, "g", {}, 1);
			children(g6).forEach(detach_dev);
			g7 = claim_element(svg0_nodes, "g", {}, 1);
			children(g7).forEach(detach_dev);
			g8 = claim_element(svg0_nodes, "g", {}, 1);
			children(g8).forEach(detach_dev);
			g9 = claim_element(svg0_nodes, "g", {}, 1);
			children(g9).forEach(detach_dev);
			g10 = claim_element(svg0_nodes, "g", {}, 1);
			children(g10).forEach(detach_dev);
			g11 = claim_element(svg0_nodes, "g", {}, 1);
			children(g11).forEach(detach_dev);
			g12 = claim_element(svg0_nodes, "g", {}, 1);
			children(g12).forEach(detach_dev);
			g13 = claim_element(svg0_nodes, "g", {}, 1);
			children(g13).forEach(detach_dev);
			g14 = claim_element(svg0_nodes, "g", {}, 1);
			children(g14).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			t0 = claim_space(div_nodes);

			svg1 = claim_element(
				div_nodes,
				"svg",
				{
					class: true,
					viewBox: true,
					xmlns: true,
					"xmlns:xlink": true
				},
				1
			);

			var svg1_nodes = children(svg1);

			radialGradient = claim_element(
				svg1_nodes,
				"radialGradient",
				{
					id: true,
					cx: true,
					cy: true,
					gradientUnits: true,
					r: true
				},
				1
			);

			var radialGradient_nodes = children(radialGradient);
			stop0 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop0).forEach(detach_dev);
			stop1 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop1).forEach(detach_dev);
			stop2 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop2).forEach(detach_dev);
			stop3 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop3).forEach(detach_dev);
			stop4 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop4).forEach(detach_dev);
			stop5 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop5).forEach(detach_dev);
			stop6 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop6).forEach(detach_dev);
			stop7 = claim_element(radialGradient_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop7).forEach(detach_dev);
			radialGradient_nodes.forEach(detach_dev);

			linearGradient0 = claim_element(
				svg1_nodes,
				"linearGradient",
				{
					id: true,
					gradientUnits: true,
					x1: true,
					x2: true,
					y1: true,
					y2: true
				},
				1
			);

			var linearGradient0_nodes = children(linearGradient0);

			stop8 = claim_element(
				linearGradient0_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop8).forEach(detach_dev);

			stop9 = claim_element(
				linearGradient0_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop9).forEach(detach_dev);

			stop10 = claim_element(
				linearGradient0_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop10).forEach(detach_dev);
			stop11 = claim_element(linearGradient0_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop11).forEach(detach_dev);
			linearGradient0_nodes.forEach(detach_dev);

			linearGradient1 = claim_element(
				svg1_nodes,
				"linearGradient",
				{
					id: true,
					gradientUnits: true,
					x1: true,
					x2: true,
					y1: true,
					y2: true
				},
				1
			);

			var linearGradient1_nodes = children(linearGradient1);

			stop12 = claim_element(
				linearGradient1_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop12).forEach(detach_dev);

			stop13 = claim_element(
				linearGradient1_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop13).forEach(detach_dev);

			stop14 = claim_element(
				linearGradient1_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop14).forEach(detach_dev);

			stop15 = claim_element(
				linearGradient1_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop15).forEach(detach_dev);
			stop16 = claim_element(linearGradient1_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop16).forEach(detach_dev);
			linearGradient1_nodes.forEach(detach_dev);
			linearGradient2 = claim_element(svg1_nodes, "linearGradient", { id: true }, 1);
			var linearGradient2_nodes = children(linearGradient2);

			stop17 = claim_element(
				linearGradient2_nodes,
				"stop",
				{
					offset: true,
					"stop-color": true,
					"stop-opacity": true
				},
				1
			);

			children(stop17).forEach(detach_dev);
			stop18 = claim_element(linearGradient2_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop18).forEach(detach_dev);
			linearGradient2_nodes.forEach(detach_dev);

			linearGradient3 = claim_element(
				svg1_nodes,
				"linearGradient",
				{
					id: true,
					gradientUnits: true,
					x1: true,
					x2: true,
					"xlink:href": true,
					y1: true,
					y2: true
				},
				1
			);

			children(linearGradient3).forEach(detach_dev);

			linearGradient4 = claim_element(
				svg1_nodes,
				"linearGradient",
				{
					id: true,
					gradientUnits: true,
					x1: true,
					x2: true,
					"xlink:href": true,
					y1: true,
					y2: true
				},
				1
			);

			children(linearGradient4).forEach(detach_dev);

			linearGradient5 = claim_element(
				svg1_nodes,
				"linearGradient",
				{
					id: true,
					gradientUnits: true,
					x1: true,
					x2: true,
					"xlink:href": true,
					y1: true,
					y2: true
				},
				1
			);

			children(linearGradient5).forEach(detach_dev);

			linearGradient6 = claim_element(
				svg1_nodes,
				"linearGradient",
				{
					id: true,
					gradientUnits: true,
					x1: true,
					x2: true,
					"xlink:href": true,
					y1: true,
					y2: true
				},
				1
			);

			children(linearGradient6).forEach(detach_dev);

			linearGradient7 = claim_element(
				svg1_nodes,
				"linearGradient",
				{
					id: true,
					gradientUnits: true,
					x1: true,
					x2: true,
					y1: true,
					y2: true
				},
				1
			);

			var linearGradient7_nodes = children(linearGradient7);
			stop19 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop19).forEach(detach_dev);
			stop20 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop20).forEach(detach_dev);
			stop21 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop21).forEach(detach_dev);
			stop22 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop22).forEach(detach_dev);
			stop23 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop23).forEach(detach_dev);
			stop24 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop24).forEach(detach_dev);
			stop25 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop25).forEach(detach_dev);
			stop26 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop26).forEach(detach_dev);
			stop27 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop27).forEach(detach_dev);
			stop28 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop28).forEach(detach_dev);
			stop29 = claim_element(linearGradient7_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop29).forEach(detach_dev);
			linearGradient7_nodes.forEach(detach_dev);
			path3 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path3).forEach(detach_dev);
			path4 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path4).forEach(detach_dev);
			path5 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path5).forEach(detach_dev);
			path6 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path6).forEach(detach_dev);
			path7 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path7).forEach(detach_dev);
			path8 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path8).forEach(detach_dev);
			path9 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path9).forEach(detach_dev);
			path10 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path10).forEach(detach_dev);
			g15 = claim_element(svg1_nodes, "g", { fill: true }, 1);
			var g15_nodes = children(g15);
			path11 = claim_element(g15_nodes, "path", { d: true }, 1);
			children(path11).forEach(detach_dev);
			path12 = claim_element(g15_nodes, "path", { d: true }, 1);
			children(path12).forEach(detach_dev);
			path13 = claim_element(g15_nodes, "path", { d: true }, 1);
			children(path13).forEach(detach_dev);
			g15_nodes.forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);

			svg2 = claim_element(
				div_nodes,
				"svg",
				{
					class: true,
					id: true,
					"enable-background": true,
					viewBox: true,
					xmlns: true
				},
				1
			);

			var svg2_nodes = children(svg2);
			g17 = claim_element(svg2_nodes, "g", {}, 1);
			var g17_nodes = children(g17);
			g16 = claim_element(g17_nodes, "g", { fill: true }, 1);
			var g16_nodes = children(g16);
			path14 = claim_element(g16_nodes, "path", { d: true }, 1);
			children(path14).forEach(detach_dev);
			path15 = claim_element(g16_nodes, "path", { d: true }, 1);
			children(path15).forEach(detach_dev);
			path16 = claim_element(g16_nodes, "path", { d: true }, 1);
			children(path16).forEach(detach_dev);
			g16_nodes.forEach(detach_dev);
			path17 = claim_element(g17_nodes, "path", { d: true, fill: true }, 1);
			children(path17).forEach(detach_dev);
			path18 = claim_element(g17_nodes, "path", { d: true, fill: true }, 1);
			children(path18).forEach(detach_dev);
			path19 = claim_element(g17_nodes, "path", { d: true, fill: true }, 1);
			children(path19).forEach(detach_dev);
			path20 = claim_element(g17_nodes, "path", { d: true }, 1);
			children(path20).forEach(detach_dev);
			g17_nodes.forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);

			svg3 = claim_element(
				div_nodes,
				"svg",
				{
					"xmlns:xlink": true,
					version: true,
					id: true,
					xmlns: true,
					class: true,
					x: true,
					y: true,
					viewBox: true,
					style: true,
					"xml:space": true
				},
				1
			);

			var svg3_nodes = children(svg3);
			g18 = claim_element(svg3_nodes, "g", {}, 1);
			var g18_nodes = children(g18);
			circle1 = claim_element(g18_nodes, "circle", { style: true, cx: true, cy: true, r: true }, 1);
			children(circle1).forEach(detach_dev);
			path21 = claim_element(g18_nodes, "path", { style: true, d: true }, 1);
			children(path21).forEach(detach_dev);
			g18_nodes.forEach(detach_dev);
			g19 = claim_element(svg3_nodes, "g", {}, 1);
			children(g19).forEach(detach_dev);
			g20 = claim_element(svg3_nodes, "g", {}, 1);
			children(g20).forEach(detach_dev);
			g21 = claim_element(svg3_nodes, "g", {}, 1);
			children(g21).forEach(detach_dev);
			g22 = claim_element(svg3_nodes, "g", {}, 1);
			children(g22).forEach(detach_dev);
			g23 = claim_element(svg3_nodes, "g", {}, 1);
			children(g23).forEach(detach_dev);
			g24 = claim_element(svg3_nodes, "g", {}, 1);
			children(g24).forEach(detach_dev);
			g25 = claim_element(svg3_nodes, "g", {}, 1);
			children(g25).forEach(detach_dev);
			g26 = claim_element(svg3_nodes, "g", {}, 1);
			children(g26).forEach(detach_dev);
			g27 = claim_element(svg3_nodes, "g", {}, 1);
			children(g27).forEach(detach_dev);
			g28 = claim_element(svg3_nodes, "g", {}, 1);
			children(g28).forEach(detach_dev);
			g29 = claim_element(svg3_nodes, "g", {}, 1);
			var g29_nodes = children(g29);
			g29_nodes.forEach(detach_dev);
			g30 = claim_element(svg3_nodes, "g", {}, 1);
			children(g30).forEach(detach_dev);
			g31 = claim_element(svg3_nodes, "g", {}, 1);
			children(g31).forEach(detach_dev);
			g32 = claim_element(svg3_nodes, "g", {}, 1);
			children(g32).forEach(detach_dev);
			g33 = claim_element(svg3_nodes, "g", {}, 1);
			children(g33).forEach(detach_dev);
			svg3_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(circle0, "fill", "#DD0B00");
			attr_dev(circle0, "cx", "236.966");
			attr_dev(circle0, "cy", "236.966");
			attr_dev(circle0, "r", "236.966");
			add_location(circle0, file, 54, 0, 1281);
			set_style(path0, "fill", "#DD0B00");
			attr_dev(path0, "d", "M404.518,69.38c92.541,92.549,92.549,242.593,0,335.142c-92.541,92.541-242.593,92.545-335.142,0\n\tL404.518,69.38z");
			add_location(path0, file, 55, 0, 1351);
			set_style(path1, "fill", "#EBA713");
			attr_dev(path1, "d", "M469.168,284.426L351.886,167.148l-138.322,15.749l-83.669,129.532l156.342,156.338\n\tC378.157,449.322,450.422,376.612,469.168,284.426z");
			add_location(path1, file, 57, 0, 1496);
			set_style(path2, "fill", "#FFFFFF");
			attr_dev(path2, "d", "M360.971,191.238c0-19.865-16.093-35.966-35.947-35.966H156.372c-19.85,0-35.94,16.105-35.94,35.966\n\tv96.444c0,19.865,16.093,35.966,35.94,35.966h168.649c19.858,0,35.947-16.105,35.947-35.966v-96.444H360.971z M216.64,280.146\n\tv-90.584l68.695,45.294L216.64,280.146z");
			add_location(path2, file, 59, 0, 1662);
			add_location(g0, file, 62, 0, 1956);
			add_location(g1, file, 64, 0, 1965);
			add_location(g2, file, 66, 0, 1974);
			add_location(g3, file, 68, 0, 1983);
			add_location(g4, file, 68, 7, 1990);
			add_location(g5, file, 68, 14, 1997);
			add_location(g6, file, 68, 21, 2004);
			add_location(g7, file, 68, 28, 2011);
			add_location(g8, file, 68, 35, 2018);
			add_location(g9, file, 68, 42, 2025);
			add_location(g10, file, 68, 49, 2032);
			add_location(g11, file, 68, 56, 2039);
			add_location(g12, file, 68, 63, 2046);
			add_location(g13, file, 68, 70, 2053);
			add_location(g14, file, 68, 77, 2060);
			attr_dev(svg0, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg0, "version", "1.1");
			attr_dev(svg0, "id", "Layer_1");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "class", "redSocial svelte-1m5k8n8");
			attr_dev(svg0, "x", "0px");
			attr_dev(svg0, "y", "0px");
			attr_dev(svg0, "viewBox", "0 0 473.931 473.931");
			set_style(svg0, "enable-background", "new 0 0 473.931 473.931");
			attr_dev(svg0, "xml:space", "preserve");
			add_location(svg0, file, 52, 0, 1011);
			attr_dev(stop0, "offset", "0");
			attr_dev(stop0, "stop-color", "#fae100");
			add_location(stop0, file, 73, 263, 2359);
			attr_dev(stop1, "offset", ".0544");
			attr_dev(stop1, "stop-color", "#fadc04");
			add_location(stop1, file, 73, 302, 2398);
			attr_dev(stop2, "offset", ".1167");
			attr_dev(stop2, "stop-color", "#fbce0e");
			add_location(stop2, file, 73, 345, 2441);
			attr_dev(stop3, "offset", ".1829");
			attr_dev(stop3, "stop-color", "#fcb720");
			add_location(stop3, file, 73, 388, 2484);
			attr_dev(stop4, "offset", ".2514");
			attr_dev(stop4, "stop-color", "#fe9838");
			add_location(stop4, file, 73, 431, 2527);
			attr_dev(stop5, "offset", ".3054");
			attr_dev(stop5, "stop-color", "#ff7950");
			add_location(stop5, file, 73, 474, 2570);
			attr_dev(stop6, "offset", ".4922");
			attr_dev(stop6, "stop-color", "#ff1c74");
			add_location(stop6, file, 73, 517, 2613);
			attr_dev(stop7, "offset", "1");
			attr_dev(stop7, "stop-color", "#6c1cd1");
			add_location(stop7, file, 73, 560, 2656);
			attr_dev(radialGradient, "id", "a");
			attr_dev(radialGradient, "cx", "104.9571229418");
			attr_dev(radialGradient, "cy", "447.4474330468");
			attr_dev(radialGradient, "gradientUnits", "userSpaceOnUse");
			attr_dev(radialGradient, "r", "564.64588968");
			add_location(radialGradient, file, 73, 152, 2248);
			attr_dev(stop8, "offset", "0");
			attr_dev(stop8, "stop-color", "#a1b5d8");
			attr_dev(stop8, "stop-opacity", "0");
			add_location(stop8, file, 73, 752, 2848);
			attr_dev(stop9, "offset", ".3094");
			attr_dev(stop9, "stop-color", "#90a2bd");
			attr_dev(stop9, "stop-opacity", ".309804");
			add_location(stop9, file, 73, 808, 2904);
			attr_dev(stop10, "offset", ".7554");
			attr_dev(stop10, "stop-color", "#7c8b9c");
			attr_dev(stop10, "stop-opacity", ".756863");
			add_location(stop10, file, 73, 874, 2970);
			attr_dev(stop11, "offset", "1");
			attr_dev(stop11, "stop-color", "#748290");
			add_location(stop11, file, 73, 940, 3036);
			attr_dev(linearGradient0, "id", "b");
			attr_dev(linearGradient0, "gradientUnits", "userSpaceOnUse");
			attr_dev(linearGradient0, "x1", "196.3726539866");
			attr_dev(linearGradient0, "x2", "-671.0159540134");
			attr_dev(linearGradient0, "y1", "222.4596783332");
			attr_dev(linearGradient0, "y2", "-265.4464136668");
			add_location(linearGradient0, file, 73, 616, 2712);
			attr_dev(stop12, "offset", "0");
			attr_dev(stop12, "stop-color", "#fae100");
			attr_dev(stop12, "stop-opacity", "0");
			add_location(stop12, file, 73, 1117, 3213);
			attr_dev(stop13, "offset", ".3068");
			attr_dev(stop13, "stop-color", "#fca800");
			attr_dev(stop13, "stop-opacity", ".305882");
			add_location(stop13, file, 73, 1173, 3269);
			attr_dev(stop14, "offset", ".6275");
			attr_dev(stop14, "stop-color", "#fe7300");
			attr_dev(stop14, "stop-opacity", ".627451");
			add_location(stop14, file, 73, 1239, 3335);
			attr_dev(stop15, "offset", ".8685");
			attr_dev(stop15, "stop-color", "#ff5200");
			attr_dev(stop15, "stop-opacity", ".866667");
			add_location(stop15, file, 73, 1305, 3401);
			attr_dev(stop16, "offset", "1");
			attr_dev(stop16, "stop-color", "#ff4500");
			add_location(stop16, file, 73, 1371, 3467);
			attr_dev(linearGradient1, "id", "c");
			attr_dev(linearGradient1, "gradientUnits", "userSpaceOnUse");
			attr_dev(linearGradient1, "x1", "256.0003");
			attr_dev(linearGradient1, "x2", "256.0003");
			attr_dev(linearGradient1, "y1", "451.9660859688");
			attr_dev(linearGradient1, "y2", "531.773969673");
			add_location(linearGradient1, file, 73, 996, 3092);
			attr_dev(stop17, "offset", "0");
			attr_dev(stop17, "stop-color", "#833ab4");
			attr_dev(stop17, "stop-opacity", "0");
			add_location(stop17, file, 73, 1450, 3546);
			attr_dev(stop18, "offset", "1");
			attr_dev(stop18, "stop-color", "#833ab4");
			add_location(stop18, file, 73, 1506, 3602);
			attr_dev(linearGradient2, "id", "d");
			add_location(linearGradient2, file, 73, 1427, 3523);
			attr_dev(linearGradient3, "id", "e");
			attr_dev(linearGradient3, "gradientUnits", "userSpaceOnUse");
			attr_dev(linearGradient3, "x1", "226.8724066998");
			attr_dev(linearGradient3, "x2", "100.1606848024");
			xlink_attr(linearGradient3, "xlink:href", "#d");
			attr_dev(linearGradient3, "y1", "226.147987369");
			attr_dev(linearGradient3, "y2", "99.4361650794");
			add_location(linearGradient3, file, 73, 1562, 3658);
			attr_dev(linearGradient4, "id", "f");
			attr_dev(linearGradient4, "gradientUnits", "userSpaceOnUse");
			attr_dev(linearGradient4, "x1", "350.899540777");
			attr_dev(linearGradient4, "x2", "287.6555669352");
			xlink_attr(linearGradient4, "xlink:href", "#d");
			attr_dev(linearGradient4, "y1", "468.287448276");
			attr_dev(linearGradient4, "y2", "170.1375727138");
			add_location(linearGradient4, file, 73, 1711, 3807);
			attr_dev(linearGradient5, "id", "g");
			attr_dev(linearGradient5, "gradientUnits", "userSpaceOnUse");
			attr_dev(linearGradient5, "x1", "374.965057");
			attr_dev(linearGradient5, "x2", "120.9410670648");
			xlink_attr(linearGradient5, "xlink:href", "#d");
			attr_dev(linearGradient5, "y1", "374.9649673922");
			attr_dev(linearGradient5, "y2", "120.9408770648");
			add_location(linearGradient5, file, 73, 1860, 3956);
			attr_dev(linearGradient6, "id", "h");
			attr_dev(linearGradient6, "gradientUnits", "userSpaceOnUse");
			attr_dev(linearGradient6, "x1", "393.806665096");
			attr_dev(linearGradient6, "x2", "309.8058007666");
			xlink_attr(linearGradient6, "xlink:href", "#d");
			attr_dev(linearGradient6, "y1", "221.2631037014");
			attr_dev(linearGradient6, "y2", "137.2623397642");
			add_location(linearGradient6, file, 73, 2007, 4103);
			attr_dev(stop19, "offset", "0");
			attr_dev(stop19, "stop-color", "#833ab4");
			add_location(stop19, file, 73, 2291, 4387);
			attr_dev(stop20, "offset", ".0922");
			attr_dev(stop20, "stop-color", "#9c3495");
			add_location(stop20, file, 73, 2330, 4426);
			attr_dev(stop21, "offset", ".2927");
			attr_dev(stop21, "stop-color", "#dc2546");
			add_location(stop21, file, 73, 2373, 4469);
			attr_dev(stop22, "offset", ".392");
			attr_dev(stop22, "stop-color", "#fd1d1d");
			add_location(stop22, file, 73, 2416, 4512);
			attr_dev(stop23, "offset", ".5589");
			attr_dev(stop23, "stop-color", "#fc6831");
			add_location(stop23, file, 73, 2458, 4554);
			attr_dev(stop24, "offset", ".6887");
			attr_dev(stop24, "stop-color", "#fc9b40");
			add_location(stop24, file, 73, 2501, 4597);
			attr_dev(stop25, "offset", ".7521");
			attr_dev(stop25, "stop-color", "#fcaf45");
			add_location(stop25, file, 73, 2544, 4640);
			attr_dev(stop26, "offset", ".7806");
			attr_dev(stop26, "stop-color", "#fdb750");
			add_location(stop26, file, 73, 2587, 4683);
			attr_dev(stop27, "offset", ".8656");
			attr_dev(stop27, "stop-color", "#fecb6a");
			add_location(stop27, file, 73, 2630, 4726);
			attr_dev(stop28, "offset", ".9415");
			attr_dev(stop28, "stop-color", "#ffd87a");
			add_location(stop28, file, 73, 2673, 4769);
			attr_dev(stop29, "offset", "1");
			attr_dev(stop29, "stop-color", "#ffdc80");
			add_location(stop29, file, 73, 2716, 4812);
			attr_dev(linearGradient7, "id", "i");
			attr_dev(linearGradient7, "gradientUnits", "userSpaceOnUse");
			attr_dev(linearGradient7, "x1", "357.6582448576");
			attr_dev(linearGradient7, "x2", "150.5426107646");
			attr_dev(linearGradient7, "y1", "155.0495285836");
			attr_dev(linearGradient7, "y2", "362.1651626766");
			add_location(linearGradient7, file, 73, 2157, 4253);
			attr_dev(path3, "d", "m503.234375 91.578125c-4.660156-43.664063-39.144531-78.15625-82.8125-82.8125-109.507813-11.6875-219.335937-11.6875-328.839844 0-43.667969 4.660156-78.15625 39.148437-82.816406 82.8125-11.6875 109.503906-11.6875 219.335937 0 328.839844 4.660156 43.667969 39.148437 78.15625 82.8125 82.816406 109.503906 11.6875 219.335937 11.6875 328.84375 0 43.667969-4.660156 78.152344-39.148437 82.8125-82.816406 11.6875-109.503907 11.6875-219.332031 0-328.839844zm0 0");
			attr_dev(path3, "fill", "url(#a)");
			add_location(path3, file, 73, 2772, 4868);
			attr_dev(path4, "d", "m475.386719 110.097656c-4.132813-38.746094-34.734375-69.351562-73.484375-73.488281-97.171875-10.367187-194.632813-10.367187-291.804688 0-38.746094 4.136719-69.351562 34.742187-73.488281 73.488281-10.367187 97.171875-10.367187 194.632813 0 291.800782 4.136719 38.75 34.742187 69.355468 73.488281 73.488281 97.171875 10.371093 194.632813 10.371093 291.800782 0 38.75-4.132813 69.355468-34.738281 73.488281-73.488281 10.371093-97.167969 10.371093-194.628907 0-291.800782zm0 0");
			attr_dev(path4, "fill", "url(#b)");
			add_location(path4, file, 73, 3252, 5348);
			attr_dev(path5, "d", "m7.671875 409.804688c.351563 3.539062.714844 7.078124 1.09375 10.617187 4.660156 43.664063 39.148437 78.152344 82.816406 82.8125 109.503907 11.6875 219.335938 11.6875 328.839844 0 43.667969-4.660156 78.152344-39.148437 82.8125-82.8125.378906-3.539063.742187-7.078125 1.097656-10.617187zm0 0");
			attr_dev(path5, "fill", "url(#c)");
			add_location(path5, file, 73, 3751, 5847);
			attr_dev(path6, "d", "m503.234375 420.417969c6.28125-58.839844 9.179687-117.773438 8.710937-176.699219l-117.03125-117.03125c-14.621093-16.691406-35.976562-27.109375-61.070312-28.011719-51.605469-1.859375-103.375-1.765625-154.988281.007813-42.867188 1.476562-72.84375 30.289062-80.53125 72.636718-1.355469 7.476563-2.167969 15.050782-3.234375 22.582032v124.148437c.589844 4.023438 1.457031 8.027344 1.726562 12.074219 1.71875 25.757812 12.304688 47.820312 29.253906 62.746094l119.09375 119.089844c58.445313.410156 116.894532-2.496094 175.257813-8.726563 43.667969-4.660156 78.152344-39.148437 82.8125-82.816406zm0 0");
			attr_dev(path6, "fill", "url(#e)");
			add_location(path6, file, 73, 4068, 6164);
			attr_dev(path7, "d", "m503.234375 420.421875c-4.65625 43.660156-39.152344 78.15625-82.8125 82.8125-58.355469 6.226563-116.816406 9.136719-175.253906 8.726563l-118.914063-118.914063c13.785156 12.066406 31.753906 19.414063 52.605469 20.199219 51.601563 1.9375 103.382813 1.886718 154.984375.027344 46.671875-1.6875 80.445312-36.230469 81.902344-82.902344 1.554687-49.554688 1.554687-99.238282 0-148.792969-.664063-21.53125-8.222656-40.476563-20.753906-54.8125l116.957031 116.957031c.460937 58.917969-2.4375 117.859375-8.714844 176.699219zm0 0");
			attr_dev(path7, "fill", "url(#f)");
			add_location(path7, file, 73, 4687, 6783);
			attr_dev(path8, "d", "m316.414062 200.558594c-14.992187-16.324219-36.503906-26.566406-60.414062-26.566406-45.289062 0-82.007812 36.71875-82.007812 82.007812 0 23.910156 10.242187 45.421875 26.566406 60.414062l189.738281 189.738282c10.042969-.875 20.085937-1.847656 30.121094-2.917969 43.667969-4.660156 78.15625-39.148437 82.816406-82.816406 1.070313-10.035157 2.042969-20.078125 2.917969-30.121094zm0 0");
			attr_dev(path8, "fill", "url(#g)");
			add_location(path8, file, 73, 5232, 7328);
			attr_dev(path9, "d", "m511.007812 311.152344-152.703124-152.699219c-3.5625-4.675781-9.175782-7.710937-15.507813-7.710937-10.773437 0-19.511719 8.734374-19.511719 19.511718 0 6.332032 3.035156 11.945313 7.710938 15.507813l177.28125 177.285156c1.203125-17.292969 2.113281-34.59375 2.730468-51.894531zm0 0");
			attr_dev(path9, "fill", "url(#h)");
			add_location(path9, file, 73, 5640, 7736);
			attr_dev(path10, "d", "m95.089844 193.902344c1.066406-7.53125 1.878906-15.105469 3.234375-22.582032 7.683593-42.347656 37.664062-71.160156 80.53125-72.636718 51.613281-1.773438 103.382812-1.867188 154.988281-.007813 46.65625 1.679688 80.445312 36.226563 81.902344 82.898438 1.550781 49.558593 1.550781 99.238281 0 148.796875-1.457032 46.671875-35.234375 81.214844-81.898438 82.898437-51.605468 1.863281-103.386718 1.910157-154.988281-.027343-46.664063-1.753907-78.921875-36.378907-82.042969-83.121094-.269531-4.042969-1.136718-8.050782-1.726562-12.074219 0-41.382813 0-82.765625 0-124.144531zm160.953125 191.707031c23.617187 0 47.257812.707031 70.84375-.164063 36.980469-1.371093 59.726562-23.441406 60.589843-60.386718 1.070313-46.035156 1.070313-92.132813 0-138.171875-.863281-36.9375-23.625-59.523438-60.589843-60.308594-46.917969-.992187-93.886719-.984375-140.804688 0-36.683593.769531-59.496093 22.898437-60.492187 59.429687-1.265625 46.617188-1.265625 93.316407 0 139.933594.996094 36.527344 23.808594 58.144532 60.496094 59.503906 23.289062.867188 46.636718.164063 69.957031.164063zm0 0");
			attr_dev(path10, "fill", "url(#i)");
			add_location(path10, file, 73, 5947, 8043);
			attr_dev(path11, "d", "m95.089844 193.902344c1.066406-7.53125 1.878906-15.105469 3.234375-22.582032 7.683593-42.347656 37.664062-71.160156 80.53125-72.636718 51.613281-1.773438 103.382812-1.867188 154.988281-.007813 46.65625 1.679688 80.445312 36.226563 81.902344 82.898438 1.550781 49.558593 1.550781 99.238281 0 148.796875-1.457032 46.671875-35.234375 81.214844-81.898438 82.898437-51.605468 1.863281-103.386718 1.910157-154.988281-.027343-46.664063-1.753907-78.921875-36.378907-82.042969-83.121094-.269531-4.042969-1.136718-8.050782-1.726562-12.074219 0-41.382813 0-82.765625 0-124.144531zm160.953125 191.707031c23.617187 0 47.257812.707031 70.84375-.164063 36.980469-1.371093 59.726562-23.441406 60.589843-60.386718 1.070313-46.035156 1.070313-92.132813 0-138.171875-.863281-36.9375-23.625-59.523438-60.589843-60.308594-46.917969-.992187-93.886719-.984375-140.804688 0-36.683593.769531-59.496093 22.898437-60.492187 59.429687-1.265625 46.617188-1.265625 93.316407 0 139.933594.996094 36.527344 23.808594 58.144532 60.496094 59.503906 23.289062.867188 46.636718.164063 69.957031.164063zm0 0");
			add_location(path11, file, 73, 7059, 9155);
			attr_dev(path12, "d", "m256 173.996094c-45.289062 0-82.007812 36.714844-82.007812 82.003906 0 45.292969 36.71875 82.007812 82.007812 82.007812 45.292969 0 82.007812-36.714843 82.007812-82.007812 0-45.289062-36.714843-82.003906-82.007812-82.003906zm0 135.777344c-29.699219 0-53.773438-24.074219-53.773438-53.773438s24.074219-53.773438 53.773438-53.773438 53.773438 24.074219 53.773438 53.773438-24.074219 53.773438-53.773438 53.773438zm0 0");
			add_location(path12, file, 73, 8141, 10237);
			attr_dev(path13, "d", "m362.304688 170.253906c0 10.773438-8.734376 19.507813-19.507813 19.507813s-19.511719-8.734375-19.511719-19.507813c0-10.777344 8.738282-19.511718 19.511719-19.511718s19.507813 8.734374 19.507813 19.511718zm0 0");
			add_location(path13, file, 73, 8568, 10664);
			attr_dev(g15, "fill", "#fff");
			add_location(g15, file, 73, 7044, 9140);
			attr_dev(svg1, "class", "redSocial svelte-1m5k8n8");
			attr_dev(svg1, "viewBox", "0 0 512 512.00038");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg1, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			add_location(svg1, file, 73, 0, 2096);
			attr_dev(path14, "d", "m183.2 265.5c-40.6 0-73.4 32.8-72.8 73.1.4 25.8 14.6 48.2 35.5 60.7-7.1-10.9-11.3-23.8-11.5-37.7-.6-40.2 32.2-73 72.8-73 8 0 15.7 1.3 22.9 3.6v-80.5c-7.5-1.1-15.2-1.7-22.9-1.7-.4 0-.7 0-1.1 0v59.2c-7.2-2.4-14.9-3.7-22.9-3.7z");
			add_location(path14, file, 77, 171, 11084);
			attr_dev(path15, "d", "m358.7 24h-.6-20.8c6 30.1 22.9 56.3 46.5 74.1-15.5-20.5-24.9-46.1-25.1-74.1z");
			add_location(path15, file, 77, 407, 11320);
			attr_dev(path16, "d", "m481.1 225.1v-78.5c-7.9 0-15.5-.8-23-2.2v57.6c-27.2 0-53.6-5.3-78.4-15.9-16-6.8-30.9-15.5-44.6-26l.4 177.9c-.2 40-16 77.5-44.6 105.8-23.3 23-52.8 37.7-84.8 42.4-7.5 1.1-15.2 1.7-22.9 1.7-19.1 0-37.6-3.5-54.9-10 7.3 4.2 14.8 8.1 22.6 11.6 18.9 8.5 39 14.8 60 18.5 4.4.8 8.8 1.4 13.3 2 2-.2 3.9-.5 5.9-.8 32-4.7 61.5-19.4 84.8-42.4 28.6-28.3 44.4-65.8 44.6-105.8l-1.4-177.9c13.6 10.5 28.5 19.3 44.6 26 24.8 10.6 51.3 16 78.4 16z");
			add_location(path16, file, 77, 495, 11408);
			attr_dev(g16, "fill", "#f00044");
			add_location(g16, file, 77, 153, 11066);
			attr_dev(path17, "d", "m75.3 231.2c-28.3 28-44.4 66.4-44.4 106.3 0 22.4 5 44.1 14.3 63.8 9.5 13.8 20.4 26.7 32.4 38.3-14.8-23.5-22.7-50.7-22.7-79.1 0-39.9 16.1-78.3 44.4-106.4 28.5-28.3 66.4-44 106.8-44.3v-21.3c-7.5-1.1-15.2-1.7-22.9-1.7-40.8.1-79.1 15.8-107.9 44.4z");
			attr_dev(path17, "fill", "#08fff9");
			add_location(path17, file, 77, 937, 11850);
			attr_dev(path18, "d", "m458.1 144.3v-21.4h-.2c-27.8 0-53.4-9.2-74-24.8 17.9 23.6 44.1 40.4 74.2 46.2z");
			attr_dev(path18, "fill", "#08fff9");
			add_location(path18, file, 77, 1207, 12120);
			attr_dev(path19, "d", "m203.1 432.3c9.5.5 18.6-.8 27-3.5 29-9.5 49.9-36.5 49.9-68.3l.1-119v-217.5h57.2c-1.5-7.5-2.3-15.1-2.4-23h-78.9v217.3l-.1 119c0 31.8-20.9 58.8-49.9 68.3-8.4 2.8-17.5 4.1-27 3.5-12.1-.7-23.4-4.3-33.2-10.1 12.4 19.1 33.4 32 57.3 33.3z");
			attr_dev(path19, "fill", "#08fff9");
			add_location(path19, file, 77, 1312, 12225);
			attr_dev(path20, "d", "m458.1 202.1v-57.7c-30.1-5.8-56.3-22.6-74.2-46.2-23.6-17.8-40.5-44-46.5-74.1h-57.2v217.3l-.1 119c0 31.8-20.9 58.8-49.9 68.3-8.4 2.8-17.5 4.1-27 3.5-24-1.3-44.9-14.2-57.2-33.1-20.9-12.4-35.1-34.9-35.5-60.7-.6-40.2 32.2-73 72.8-73 8 0 15.7 1.3 22.9 3.6v-59.2c-40.4.3-78.3 16-106.8 44.3-28.4 28.1-44.5 66.5-44.5 106.4 0 28.4 7.9 55.6 22.7 79.1 15.2 14.8 32.2 27.6 50.7 38.3 17.3 6.6 35.8 10 54.9 10 7.7 0 15.4-.6 22.9-1.7 32-4.7 61.5-19.4 84.8-42.4 28.6-28.3 44.4-65.8 44.6-105.8l-.4-177.9c13.6 10.5 28.5 19.3 44.6 26 24.8 10.6 51.3 16 78.4 16z");
			add_location(path20, file, 77, 1570, 12483);
			add_location(g17, file, 77, 150, 11063);
			attr_dev(svg2, "class", "redSocial svelte-1m5k8n8");
			attr_dev(svg2, "id", "Capa_1");
			attr_dev(svg2, "enable-background", "new 0 0 512 512");
			attr_dev(svg2, "viewBox", "0 0 512 512");
			attr_dev(svg2, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg2, file, 77, 0, 10913);
			set_style(circle1, "fill", "#DD0B00");
			attr_dev(circle1, "cx", "56.098");
			attr_dev(circle1, "cy", "56.098");
			attr_dev(circle1, "r", "56.098");
			add_location(circle1, file, 84, 1, 13342);
			set_style(path21, "fill", "#FFFFFF");
			attr_dev(path21, "d", "M70.201,58.294h-10.01v36.672H45.025V58.294h-7.213V45.406h7.213v-8.34\n\t\tc0-5.964,2.833-15.303,15.301-15.303L71.56,21.81v12.51h-8.151c-1.337,0-3.217,0.668-3.217,3.513v7.585h11.334L70.201,58.294z");
			add_location(path21, file, 85, 1, 13410);
			add_location(g18, file, 83, 0, 13337);
			add_location(g19, file, 88, 0, 13642);
			add_location(g20, file, 88, 7, 13649);
			add_location(g21, file, 88, 14, 13656);
			add_location(g22, file, 88, 21, 13663);
			add_location(g23, file, 88, 28, 13670);
			add_location(g24, file, 88, 35, 13677);
			add_location(g25, file, 88, 42, 13684);
			add_location(g26, file, 88, 49, 13691);
			add_location(g27, file, 88, 56, 13698);
			add_location(g28, file, 88, 63, 13705);
			add_location(g29, file, 89, 0, 13713);
			add_location(g30, file, 90, 4, 13721);
			add_location(g31, file, 90, 11, 13728);
			add_location(g32, file, 90, 18, 13735);
			add_location(g33, file, 90, 25, 13742);
			attr_dev(svg3, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr_dev(svg3, "version", "1.1");
			attr_dev(svg3, "id", "Capa_1");
			attr_dev(svg3, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg3, "class", "redSocial svelte-1m5k8n8");
			attr_dev(svg3, "x", "0px");
			attr_dev(svg3, "y", "0px");
			attr_dev(svg3, "viewBox", "0 0 112.196 112.196");
			set_style(svg3, "enable-background", "new 0 0 112.196 112.196");
			attr_dev(svg3, "xml:space", "preserve");
			add_location(svg3, file, 81, 0, 13067);
			attr_dev(div, "class", "social svelte-1m5k8n8");
			add_location(div, file, 48, 0, 971);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, svg0);
			append_dev(svg0, circle0);
			append_dev(svg0, path0);
			append_dev(svg0, path1);
			append_dev(svg0, path2);
			append_dev(svg0, g0);
			append_dev(svg0, g1);
			append_dev(svg0, g2);
			append_dev(svg0, g3);
			append_dev(svg0, g4);
			append_dev(svg0, g5);
			append_dev(svg0, g6);
			append_dev(svg0, g7);
			append_dev(svg0, g8);
			append_dev(svg0, g9);
			append_dev(svg0, g10);
			append_dev(svg0, g11);
			append_dev(svg0, g12);
			append_dev(svg0, g13);
			append_dev(svg0, g14);
			append_dev(div, t0);
			append_dev(div, svg1);
			append_dev(svg1, radialGradient);
			append_dev(radialGradient, stop0);
			append_dev(radialGradient, stop1);
			append_dev(radialGradient, stop2);
			append_dev(radialGradient, stop3);
			append_dev(radialGradient, stop4);
			append_dev(radialGradient, stop5);
			append_dev(radialGradient, stop6);
			append_dev(radialGradient, stop7);
			append_dev(svg1, linearGradient0);
			append_dev(linearGradient0, stop8);
			append_dev(linearGradient0, stop9);
			append_dev(linearGradient0, stop10);
			append_dev(linearGradient0, stop11);
			append_dev(svg1, linearGradient1);
			append_dev(linearGradient1, stop12);
			append_dev(linearGradient1, stop13);
			append_dev(linearGradient1, stop14);
			append_dev(linearGradient1, stop15);
			append_dev(linearGradient1, stop16);
			append_dev(svg1, linearGradient2);
			append_dev(linearGradient2, stop17);
			append_dev(linearGradient2, stop18);
			append_dev(svg1, linearGradient3);
			append_dev(svg1, linearGradient4);
			append_dev(svg1, linearGradient5);
			append_dev(svg1, linearGradient6);
			append_dev(svg1, linearGradient7);
			append_dev(linearGradient7, stop19);
			append_dev(linearGradient7, stop20);
			append_dev(linearGradient7, stop21);
			append_dev(linearGradient7, stop22);
			append_dev(linearGradient7, stop23);
			append_dev(linearGradient7, stop24);
			append_dev(linearGradient7, stop25);
			append_dev(linearGradient7, stop26);
			append_dev(linearGradient7, stop27);
			append_dev(linearGradient7, stop28);
			append_dev(linearGradient7, stop29);
			append_dev(svg1, path3);
			append_dev(svg1, path4);
			append_dev(svg1, path5);
			append_dev(svg1, path6);
			append_dev(svg1, path7);
			append_dev(svg1, path8);
			append_dev(svg1, path9);
			append_dev(svg1, path10);
			append_dev(svg1, g15);
			append_dev(g15, path11);
			append_dev(g15, path12);
			append_dev(g15, path13);
			append_dev(div, t1);
			append_dev(div, svg2);
			append_dev(svg2, g17);
			append_dev(g17, g16);
			append_dev(g16, path14);
			append_dev(g16, path15);
			append_dev(g16, path16);
			append_dev(g17, path17);
			append_dev(g17, path18);
			append_dev(g17, path19);
			append_dev(g17, path20);
			append_dev(div, t2);
			append_dev(div, svg3);
			append_dev(svg3, g18);
			append_dev(g18, circle1);
			append_dev(g18, path21);
			append_dev(svg3, g19);
			append_dev(svg3, g20);
			append_dev(svg3, g21);
			append_dev(svg3, g22);
			append_dev(svg3, g23);
			append_dev(svg3, g24);
			append_dev(svg3, g25);
			append_dev(svg3, g26);
			append_dev(svg3, g27);
			append_dev(svg3, g28);
			append_dev(svg3, g29);
			append_dev(svg3, g30);
			append_dev(svg3, g31);
			append_dev(svg3, g32);
			append_dev(svg3, g33);

			if (!mounted) {
				dispose = [
					listen_dev(svg0, "click", /*youtube*/ ctx[1], false, false, false),
					listen_dev(svg1, "click", /*instagram*/ ctx[2], false, false, false),
					listen_dev(svg2, "click", /*tiktok*/ ctx[3], false, false, false),
					listen_dev(svg3, "click", /*facebook*/ ctx[0], false, false, false)
				];

				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Redes_sociales", slots, []);

	let facebook = () => {
		window.location = "https://www.facebook.com/briimax";
	};

	let youtube = () => {
		window.location = "https://www.youtube.com/channel/UC72MTcnvLRDruvJTU6A98Hg/featured";
	};

	let instagram = () => {
		window.location = "https://www.instagram.com/briimax/";
	};

	let tiktok = () => {
		window.location = "https://www.facebook.com/briimax";
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Redes_sociales> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		RedesSociales: Redes_sociales,
		facebook,
		youtube,
		instagram,
		tiktok
	});

	$$self.$inject_state = $$props => {
		if ("facebook" in $$props) $$invalidate(0, facebook = $$props.facebook);
		if ("youtube" in $$props) $$invalidate(1, youtube = $$props.youtube);
		if ("instagram" in $$props) $$invalidate(2, instagram = $$props.instagram);
		if ("tiktok" in $$props) $$invalidate(3, tiktok = $$props.tiktok);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [facebook, youtube, instagram, tiktok];
}

class Redes_sociales extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Redes_sociales",
			options,
			id: create_fragment.name
		});
	}
}

export { Redes_sociales as R };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
